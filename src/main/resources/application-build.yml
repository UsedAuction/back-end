spring:
  application:
    name: usedAuction

  # 404 에러 핸들링을 위한 설정
  web:
    resources:
      add-mappings: false

  sql:
    init:
      mode: always
  
  # 데이터베이스
  jpa:
    hibernate:
      ddl-auto: create
    database: mysql
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        highlight_sql: true
        default_batch_fetch_size: 100
    defer-datasource-initialization: true # data.sql을 사용하기 위해 데이터소스 초기화를 지연시키는 설정

  datasource:
    username: ${DB_USER_NAME} # 환경 변수
    password: ${DB_PWD} # 환경 변수
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:3306/usedauction?characterEncoding=UTF-8

  # redis
  data:
    redis:
      port: 6379
      host: ${REDIS_HOST}
      auction:
        expire-key: 'auction-item:'
      confirm:
        expire-key: 'auction-confirm:'
  cache:
    type: redis

  # JWT 시크릿 키
  jwt:
    secret: ${JWT_SECRET} # 환경 변수
    access:
      expiration: 1800000 # 30분
    refresh:
      expiration: 604800000 # 1주일

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}   # REST API 키
            client-secret: ${GOOGLE_SECRET}
            scope: profile, email
            redirect-uri: https://dddang.store/login/oauth2/code/google
          kakao:
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: https://dddang.store/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email  # 동의 항목
            client-name: Kakao
          naver:
            client-id: ${NAVER_ID}   # REST API 키
            client-secret: ${NAVER_SECRET}
            redirect-uri: https://dddang.store/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email, profile_image # 동의 항목
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

# redisson
redisson:
  host: ${REDISSON_HOST}
  port: ${REDISSON_PORT}

  #  # JWT 시크릿 키
  #  jwt:
  #    secret: ${JWT_SECRET} # 환경 변수

  # multipart
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB

# S3
aws:
  s3:
    bucket: ${S3_BUCKET_NAME}
    access-key: ${S3_ACCESS_KEY}
    secret-key: ${S3_SECRET_KEY}
  region:
    static: ap-northeast-2
  stack:
    auto: false

# 로그
logging:
  level:
    org:
      hibernate:
        SQL: info
        type:
          descriptor:
            sql: trace
  config: classpath:logback-spring.xml

# 카카오페이 secretKey
payment:
  secret-key: ${PAY_SECRET_KEY}
  ready: https://open-api.kakaopay.com/online/v1/payment/ready
  approve: https://open-api.kakaopay.com/online/v1/payment/approve

# emitter 유효 시간
notification:
  timeout: 1800000 # 30분

# health check
management:
  endpoints:
    web:
      base-path: /
      path-mapping:
        health: health-check

  health:
    db:
      enabled: true
    redis:
      enabled: true