spring:
  application:
    name: usedAuction

  # 404 에러 핸들링을 위한 설정
  web:
    resources:
      add-mappings: false

  # 데이터베이스
  jpa:
    database-platform: H2
    hibernate:
      ddl-auto: create
    database: h2
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        show_sql: true
        format_sql: true
        highlight_sql: true
        default_batch_fetch_size: 100
    defer-datasource-initialization: true # data.sql을 사용하기 위해 데이터소스 초기화를 지연시키는 설정

  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    username: ${DB_USER_NAME} # 환경 변수
    password: ${DB_PWD} # 환경 변수
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test

  # redis
  data:
    redis:
      port: 6379
      host: localhost
      auction:
        expire-key: 'auction-item:'
      confirm:
        expire-key: 'auction-confirm:'
  cache:
    type: redis

  # 메일설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          starttls:
            enable: true

redisson:
  host: localhost
  port: 6379

  #  # JWT 시크릿 키
  #  jwt:
  #    secret: ${JWT_SECRET} # 환경 변수

  # multipart
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB

# S3
aws:
  s3:
    bucket: ${S3_BUCKET_NAME}
    access-key: ${S3_ACCESS_KEY}
    secret-key: ${S3_SECRET_KEY}
  region:
    static: ap-northeast-2
  stack:
    auto: false

# 로그
logging:
  level:
    org:
      hibernate:
        SQL: info
        type:
          descriptor:
            sql: trace
  config: classpath:logback-spring.xml

# 카카오페이 secretKey
payment:
  secret-key: ${PAY_SECRET_KEY}
  ready: https://open-api.kakaopay.com/online/v1/payment/ready
  approve: https://open-api.kakaopay.com/online/v1/payment/approve


